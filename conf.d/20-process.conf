filter {

  if [type] == "nginx-access" {
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => [ "message" , "%{NGINXACCESSBACKEND}"]
      add_field => { "environment" => "production" }
      add_field => { "application" => "jira" }
      remove_field => [ "message", "drop" ]
    }
    urldecode {
      field => "username"
    }
    mutate {
      convert => ["response", "integer"]
      convert => ["bytes", "integer"]
      convert => ["responsetime", "float"]
      convert => ["upstreamResponseTimeNum", "float"]
      convert => ["responseTimeNum", "float"]
    }

    ################ INCLUDE THE RELEVANT STUBS IN HERE BASED ON YOUR ADDONS ################

    geoip {
      source => "clientip"
      target => "geoip"
      add_tag => [ "nginx-geoip" ]
    }
    useragent {
      source => "agent"
    }
    date {
      match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
    }
  }

  if [type] == "ATLASSIANLOG4J1" {
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => [ "message" , "%{ATLASSIANLOG4J1}"]
      add_field => { "environment" => "production" }
      add_field => { "application" => "jira" }
    }
    date {
      match => [ "timestamp" , "YYYY-MM-dd HH:mm:ss,SSS" ]
    }
  }

  if [type] == "ATLASSIANLOG4J2" {
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => [ "message" , "%{ATLASSIANLOG4J2}"]
      add_field => { "environment" => "production" }
      add_field => { "application" => "jira" }
      remove_field => [ "message" ]
    }
    date {
      match => [ "timestamp" , "YYYY-MM-dd HH:mm:ss,SSS" ]
    }
  }

  if [type] == "ATLASSIANLOG4J3" {
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => [ "message" , "%{ATLASSIANLOG4J3}"]
      add_field => { "environment" => "production" }
      add_field => { "application" => "jira" }
      remove_field => [ "message" ]
    }
    date {
      match => [ "timestamp" , "YYYY-MM-dd HH:mm:ss,SSS" ]
    }
  }

  if [type] == "syslog" {
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => [ "message" , "^%{SYSLOGLINE}"]
    }
  }

  if [type] == "authlog" {
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => [ "message" , [ "%{SSH_PUB_LOGIN}", "%{AUTH_SU_SUDO}", "%{SSH_DISCONNECT}", "%{AUTH_LOG_LINE}" ] ]
    }
    geoip {
      source => "remote"
      target => "geoip"
      add_tag => [ "auth-geoip" ]
    }
  }

}

